{
    "project": {
        "name": "Mojo.js Docs",
        "version": "0.7.84",
        "url": "http://mojojs.com/",
        "theme": "simple"
    },
    "files": {
        "packages/bindable.js/lib/collection/index.js": {
            "name": "packages/bindable.js/lib/collection/index.js",
            "modules": {},
            "classes": {
                "BindableCollection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/bindable.js/lib/core/eventEmitter.js": {
            "name": "packages/bindable.js/lib/core/eventEmitter.js",
            "modules": {},
            "classes": {
                "EventEmitter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/bindable.js/lib/object/index.js": {
            "name": "packages/bindable.js/lib/object/index.js",
            "modules": {},
            "classes": {
                "BindableObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/bindable.js/lib/object/transform.js": {
            "name": "packages/bindable.js/lib/object/transform.js",
            "modules": {},
            "classes": {
                "BindingTransformer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/bindable.js/lib/object/watchProperty.js": {
            "name": "packages/bindable.js/lib/object/watchProperty.js",
            "modules": {},
            "classes": {
                "Binding": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/loaf.js/lib/index.js": {
            "name": "packages/loaf.js/lib/index.js",
            "modules": {},
            "classes": {
                "Section": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/plugins/decor/events.js": {
            "name": "packages/mojo.js/lib/plugins/decor/events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/plugins/decor/factory.js": {
            "name": "packages/mojo.js/lib/plugins/decor/factory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/plugins/decor/sections.js": {
            "name": "packages/mojo.js/lib/plugins/decor/sections.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/pools/index.js": {
            "name": "packages/mojo.js/lib/pools/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/views/base/index.js": {
            "name": "packages/mojo.js/lib/views/base/index.js",
            "modules": {
                "mojo-views": 1
            },
            "classes": {
                "BaseView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/views/list/index.js": {
            "name": "packages/mojo.js/lib/views/list/index.js",
            "modules": {},
            "classes": {
                "ListView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/views/states/index.js": {
            "name": "packages/mojo.js/lib/views/states/index.js",
            "modules": {},
            "classes": {
                "StateView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/views/states/state.js": {
            "name": "packages/mojo.js/lib/views/states/state.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/animator.js": {
            "name": "packages/mojo.js/lib/animator.js",
            "modules": {},
            "classes": {
                "Animator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/application.js": {
            "name": "packages/mojo.js/lib/application.js",
            "modules": {},
            "classes": {
                "Application": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/index.js": {
            "name": "packages/mojo.js/lib/index.js",
            "modules": {},
            "classes": {
                "Mojo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/mojo.js/lib/registeredClasses.js": {
            "name": "packages/mojo.js/lib/registeredClasses.js",
            "modules": {},
            "classes": {
                "RegisteredClasses": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/string/comment.js": {
            "name": "packages/nofactor.js/lib/string/comment.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/string/container.js": {
            "name": "packages/nofactor.js/lib/string/container.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/string/element.js": {
            "name": "packages/nofactor.js/lib/string/element.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/string/fragment.js": {
            "name": "packages/nofactor.js/lib/string/fragment.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/string/index.js": {
            "name": "packages/nofactor.js/lib/string/index.js",
            "modules": {},
            "classes": {
                "StringNodeFactory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/string/style.js": {
            "name": "packages/nofactor.js/lib/string/style.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/string/text.js": {
            "name": "packages/nofactor.js/lib/string/text.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/base.js": {
            "name": "packages/nofactor.js/lib/base.js",
            "modules": {},
            "classes": {
                "BaseNodeFactory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/custom.js": {
            "name": "packages/nofactor.js/lib/custom.js",
            "modules": {},
            "classes": {
                "CustomNodeFactory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/nofactor.js/lib/dom.js": {
            "name": "packages/nofactor.js/lib/dom.js",
            "modules": {
                "mojo": 1,
                "mojo-core": 1
            },
            "classes": {
                "DomFactory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "packages/subindable.js/lib/index.js": {
            "name": "packages/subindable.js/lib/index.js",
            "modules": {},
            "classes": {
                "SubindableObject": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "mojo": {
            "name": "mojo",
            "submodules": {
                "mojo-core": 1,
                "mojo-views": 1
            },
            "classes": {
                "BindableCollection": 1,
                "EventEmitter": 1,
                "BindableObject": 1,
                "BindingTransformer": 1,
                "Binding": 1,
                "BaseView": 1,
                "ListView": 1,
                "StateView": 1,
                "Animator": 1,
                "Application": 1,
                "Mojo": 1,
                "RegisteredClasses": 1,
                "StringNodeFactory": 1,
                "CustomNodeFactory": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "packages/nofactor.js/lib/custom.js",
            "line": 9
        },
        "mojo-core": {
            "name": "mojo-core",
            "submodules": {},
            "classes": {
                "BindableCollection": 1,
                "EventEmitter": 1,
                "BindableObject": 1,
                "BindingTransformer": 1,
                "Binding": 1,
                "Section": 1,
                "Animator": 1,
                "StringNodeFactory": 1,
                "BaseNodeFactory": 1,
                "CustomNodeFactory": 1,
                "DomFactory": 1,
                "SubindableObject": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "mojo",
            "namespace": "",
            "file": "packages/subindable.js/lib/index.js",
            "line": 37,
            "tag": "module",
            "description": "BindableObjects make it easy to link properties of two separate objects - when one changes, \nthe other will automatically update with that change. It enables much easier interactions between data models and UIs, \namong other uses outside of MVC.\n<br> \n<br>\nBindableObjects provide a way to maintain the state between server <-> client for a realtime front-end \napplication (similar to Firebase), or perhaps a way to communicate between server <-> server for a realtime distributed Node.js \napplication.\n### Example\n```javascript\nvar bindable = require(\"bindable\");\nvar person = new bindable.Object({\n  name: \"craig\",\n  last: \"condon\",\n  location: {\n    city: \"San Francisco\"\n  }\n});\nperson.bind(\"location.zip\", function(value) {\n  // 94102\n}).now();\n//triggers the binding\nperson.set(\"location.zip\", \"94102\"); \n//bind location.zip to another property in the model, and do it only once\nperson.bind(\"location.zip\", { to: \"zip\", max: 1 }).now();\n//bind location.zip to another object, and make it bi-directional.\nperson.bind(\"location.zip\", { target: anotherModel, to: \"location.zip\", bothWays: true }).now();\n//chain to multiple items, and limit it!\nperson.bind(\"location.zip\", { to: [\"property\", \"anotherProperty\"], max: 1 }).now();\n//you can also transform data as it's being bound\nperson.bind(\"name\", {\n  to: \"name2\",\n  map: function (name) {\n    return name.toUpperCase();\n  }\n}).now();\n```"
        },
        "mojo-views": {
            "name": "mojo-views",
            "submodules": {},
            "classes": {
                "BaseView": 1,
                "ListView": 1,
                "StateView": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "mojo",
            "namespace": "",
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 13,
            "description": "## Usage\n<p>Views are simply models with a few special properties: `render`, and `remove`, and `decorators`. Decorators are essentially plugins\nthat allow you to customize view's behavior to fit your needs. This means you can do something like add your own template engine.\nMojo was design this way to allow better compatibility between different web frameworks. </p>\nAt the core, this is what a mojo view is:\n```javascript\nvar SubView = mojo.View.extend();\nvar view = new SubView({ name: \"craig\" }, new mojo.Application());\nconsole.log(view.get(\"name\")); //craig\nconsole.log(view.render().toString()); // blank string, no template engine specified\n```\nMojo does however come with some built-in decorators. However, you can use whatever you need.\n## Paperclip Decorator\nThe paperclip decorator allows you to use [paperclip](https://github.com/classdojo/paperclip.js) templates with mojo.\nNote that the following example assumes that you're running in either `node.js`, or have `browserified` your paperclip template:\n<br />\nhello.js:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: require(\"./hello.pc\")\n});\nnew HelloView({ name: \"Mojo\" }, new mojo.Application()).attach($(\"#application\"));\n```\nhello.pc:\n```mustache\nhello  \\{{name}}!\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/59/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n## Sections Decorator\nThe sections decorator allows you to easily define sub-views to your view. Here's a basic example:\n```javascript\nvar ContentView = mojo.View.extend({\n    paper: paperclip.compile(\"content\")\n});\nvar MainView = mojo.View.extend({\n    paper: paperclip.compile(\"main\"),\n    sections: {\n        content: ContentView\n    }\n});\n```\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/60/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\nNote that you can also use registered components for each section, like so:\n```javascript\n//setup model data for the contacts view\nvar contacts = new bindable.Collection([\n  new bindable.Object({ name: \"John\" }),\n  new bindable.Object({ name: \"Jane\" }),\n  new bindable.Object({ name: \"Jeff\" })\n]);\n// an individual contact\nvar ContactVew = mojo.View.extend({\n  paper: require(\"./contact.pc\")\n});\n// creates a contact view for each contact model\nvar ContactsView = mojo.View.extend({\n  paper: require(\"./contacts.pc\"),\n  sections: {\n    contacts: {\n      // reference ListView, and pass the following properties to it\n      type           : \"list\",\n      source         : contacts,\n      modelViewClass : ContactView\n    }\n  }\n});\n```\nThe above example creates a list of contacts. Here's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/61/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n<p>You'll notice that the properties of each section are passed directly to the component you want to use. By default, Mojo comes with a `states`, and `list` component. See\n`ListView`, and `StatesView` for further documentation.</p>\nIf you want to use your own custom component, you can do so by registering it to the application. For example:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: require(\"./hello.pc\")\n});\nvar MainView = mojo.View.extend({\n  paper: require(\"./main.pc\"),\n  sections: {\n    hello: {\n      type: \"hello\",\n      name: \"John\"\n    }\n  }\n});\nvar app = new mojo.Application();\napp.viewClasses.add(\"hello\", HelloView);\napp.viewClasses.add(\"main\", MainView);\napp.viewClasses.create(\"main\").attach($(\"#application\"));\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/62/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n## Property Scope\nBy default, sections inherit properties from their parent. Here's a basic example:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: paperclip.compile(\"hello\")\n});\nvar MainView = mojo.View.extend({\n  paper: paperclip.compile(\"main\"),\n  name: \"jeff\",\n  sections: {\n      hello: HelloView\n  }\n});\n```\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/63/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\nNote that since `name` is not defined in `HelloView`, it's being inherited from `MainView`. You can easily break inheritance by defining `name` in `HelloView`, like so:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: paperclip.compile(\"hello\"),\n  define: [\"name\"]\n});\nvar MainView = mojo.View.extend({\n  paper: paperclip.compile(\"main\"),\n  name: \"jeff\",\n  sections: {\n      hello: HelloView\n  }\n});\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/64/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>"
        }
    },
    "classes": {
        "BindableCollection": {
            "name": "BindableCollection",
            "shortname": "BindableCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 10,
            "extends": "BindableObject"
        },
        "EventEmitter": {
            "name": "EventEmitter",
            "shortname": "EventEmitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/bindable.js/lib/core/eventEmitter.js",
            "line": 8
        },
        "BindableObject": {
            "name": "BindableObject",
            "shortname": "BindableObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 10,
            "description": "BindableObjects make it easy to link properties of two separate objects - when one changes, \nthe other will automatically update with that change. It enables much easier interactions between data models and UIs, \namong other uses outside of MVC.\n<br> \n<br>\nBindableObjects provide a way to maintain the state between server <-> client for a realtime front-end \napplication (similar to Firebase), or perhaps a way to communicate between server <-> server for a realtime distributed Node.js \napplication.\n### Example\n```javascript\nvar bindable = require(\"bindable\");\nvar person = new bindable.Object({\n  name: \"craig\",\n  last: \"condon\",\n  location: {\n    city: \"San Francisco\"\n  }\n});\nperson.bind(\"location.zip\", function(value) {\n  // 94102\n}).now();\n//triggers the binding\nperson.set(\"location.zip\", \"94102\"); \n//bind location.zip to another property in the model, and do it only once\nperson.bind(\"location.zip\", { to: \"zip\", max: 1 }).now();\n//bind location.zip to another object, and make it bi-directional.\nperson.bind(\"location.zip\", { target: anotherModel, to: \"location.zip\", bothWays: true }).now();\n//chain to multiple items, and limit it!\nperson.bind(\"location.zip\", { to: [\"property\", \"anotherProperty\"], max: 1 }).now();\n//you can also transform data as it's being bound\nperson.bind(\"name\", {\n  to: \"name2\",\n  map: function (name) {\n    return name.toUpperCase();\n  }\n}).now();\n```",
            "extends": "EventEmitter"
        },
        "BindingTransformer": {
            "name": "BindingTransformer",
            "shortname": "BindingTransformer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/bindable.js/lib/object/transform.js",
            "line": 9,
            "description": "created when the second parameter on `bind(property, listener)` is an object.",
            "access": "protected",
            "tagname": ""
        },
        "Binding": {
            "name": "Binding",
            "shortname": "Binding",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/bindable.js/lib/object/watchProperty.js",
            "line": 10
        },
        "Section": {
            "name": "Section",
            "shortname": "Section",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo-core",
            "namespace": "",
            "file": "packages/loaf.js/lib/index.js",
            "line": 10,
            "description": "Sections allow you to manage groups of elements. This is important for components\nsuch as the `ListView` where you might have many list items that share the same parent node.\nFor instance, a list component might generate the following HTML:\n```html\n<!-- ContactsListView -->\n<ul id=\"contacts\">\n  <!-- ContactView 1 -->\n  <li>Monica</li>\n  <!-- ContactView 2 -->\n  <li>Sam</li>\n  <!-- ContactView 3 -->\n  <li>Liam</li>\n</ul>\n```\nSections work by sandwiching elements between two marker marker elements: `start` and `end`. These\nAre empty text nodes that are invisible to the user, but allow the application to maintain groups of elements.\n### Example\n```javascript\nvar loaf    = require(\"loaf\"),\nnodeFactory = require(\"nofactor\").nodeFactory;\n// set the node factory. In this case, we're creating a section\n// that can be used in node.js\nvar section = loaf(nodeFactory.string);\n// append some elements in the section\nsection.append(nodeFactory.createTextNode(\"Hello\"));\nsection.append(nodeFactory.createTextNode(\"John\"));\nconsole.log(section.toString()); // Hello John\nconsole.log(section.getChildNodes().length); // 4 - includes start & end markers\nconsole.log(section.getInnerChildNodes().length); // 2 - contains only text elements appended\n```",
            "is_constructor": 1,
            "params": [
                {
                    "name": "nodeFactory",
                    "description": "nodeFactory to use when creating sections",
                    "type": "BaseNodeFactory"
                },
                {
                    "name": "start",
                    "description": "(optional) the start element",
                    "type": "Element"
                },
                {
                    "name": "end",
                    "description": "(optional) the end element",
                    "type": "Element"
                }
            ]
        },
        "BaseView": {
            "name": "BaseView",
            "shortname": "BaseView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-views",
            "namespace": "",
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 15,
            "description": "## Usage\n<p>Views are simply models with a few special properties: `render`, and `remove`, and `decorators`. Decorators are essentially plugins\nthat allow you to customize view's behavior to fit your needs. This means you can do something like add your own template engine.\nMojo was design this way to allow better compatibility between different web frameworks. </p>\nAt the core, this is what a mojo view is:\n```javascript\nvar SubView = mojo.View.extend();\nvar view = new SubView({ name: \"craig\" }, new mojo.Application());\nconsole.log(view.get(\"name\")); //craig\nconsole.log(view.render().toString()); // blank string, no template engine specified\n```\nMojo does however come with some built-in decorators. However, you can use whatever you need.\n## Paperclip Decorator\nThe paperclip decorator allows you to use [paperclip](https://github.com/classdojo/paperclip.js) templates with mojo.\nNote that the following example assumes that you're running in either `node.js`, or have `browserified` your paperclip template:\n<br />\nhello.js:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: require(\"./hello.pc\")\n});\nnew HelloView({ name: \"Mojo\" }, new mojo.Application()).attach($(\"#application\"));\n```\nhello.pc:\n```mustache\nhello  \\{{name}}!\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/59/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n## Sections Decorator\nThe sections decorator allows you to easily define sub-views to your view. Here's a basic example:\n```javascript\nvar ContentView = mojo.View.extend({\n    paper: paperclip.compile(\"content\")\n});\nvar MainView = mojo.View.extend({\n    paper: paperclip.compile(\"main\"),\n    sections: {\n        content: ContentView\n    }\n});\n```\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/60/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\nNote that you can also use registered components for each section, like so:\n```javascript\n//setup model data for the contacts view\nvar contacts = new bindable.Collection([\n  new bindable.Object({ name: \"John\" }),\n  new bindable.Object({ name: \"Jane\" }),\n  new bindable.Object({ name: \"Jeff\" })\n]);\n// an individual contact\nvar ContactVew = mojo.View.extend({\n  paper: require(\"./contact.pc\")\n});\n// creates a contact view for each contact model\nvar ContactsView = mojo.View.extend({\n  paper: require(\"./contacts.pc\"),\n  sections: {\n    contacts: {\n      // reference ListView, and pass the following properties to it\n      type           : \"list\",\n      source         : contacts,\n      modelViewClass : ContactView\n    }\n  }\n});\n```\nThe above example creates a list of contacts. Here's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/61/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n<p>You'll notice that the properties of each section are passed directly to the component you want to use. By default, Mojo comes with a `states`, and `list` component. See\n`ListView`, and `StatesView` for further documentation.</p>\nIf you want to use your own custom component, you can do so by registering it to the application. For example:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: require(\"./hello.pc\")\n});\nvar MainView = mojo.View.extend({\n  paper: require(\"./main.pc\"),\n  sections: {\n    hello: {\n      type: \"hello\",\n      name: \"John\"\n    }\n  }\n});\nvar app = new mojo.Application();\napp.viewClasses.add(\"hello\", HelloView);\napp.viewClasses.add(\"main\", MainView);\napp.viewClasses.create(\"main\").attach($(\"#application\"));\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/62/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n## Property Scope\nBy default, sections inherit properties from their parent. Here's a basic example:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: paperclip.compile(\"hello\")\n});\nvar MainView = mojo.View.extend({\n  paper: paperclip.compile(\"main\"),\n  name: \"jeff\",\n  sections: {\n      hello: HelloView\n  }\n});\n```\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/63/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\nNote that since `name` is not defined in `HelloView`, it's being inherited from `MainView`. You can easily break inheritance by defining `name` in `HelloView`, like so:\n```javascript\nvar HelloView = mojo.View.extend({\n  paper: paperclip.compile(\"hello\"),\n  define: [\"name\"]\n});\nvar MainView = mojo.View.extend({\n  paper: paperclip.compile(\"main\"),\n  name: \"jeff\",\n  sections: {\n      hello: HelloView\n  }\n});\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/64/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>",
            "extends": "SubindableObject"
        },
        "ListView": {
            "name": "ListView",
            "shortname": "ListView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-views",
            "namespace": "",
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 17,
            "description": "List Views are **not directly accessible**. You'll need to define them as a section, like so:\n```javascript\n// setup the models for the todo list. They must be bindable collections, & objects\nvar todos = new bindable.Collection([\n  new bindable.Object({ text: \"pick up groceries\", done: true }),\n  new bindable.Object({ text: \"do homework\", done: false }),\n  new bindable.Object({ text: \"Walk the dog\", done: false })\n]);\n// setup the view that represents each todo item\nvar TodoView = mojo.View.extend({\n  paper: require(\"./todo.pc\")\n})\n// setup the view that represents the todos collection\nvar TodosView = mojo.View.extend({\n  paper: require(\"./todos.pc\"),\n  sections: {\n    // todoItems is a section which uses the ListView component. Basically,\n    // todosView.sections.todoItems IS a ListView. The following\n    // properties are passed to the created list view\n    todoItems: {\n      type: \"list\",\n      // \"todos\" inherited from the TodosView, which\n      // is set when TodosView is instantiated\n      source: \"todos\",\n      modelViewClass: TodoView\n    }\n  }\n});\n// add the todos view to the DOM, and pass in the todos model\nnew TodosView({ todos: todos }, new mojo.Application()).attach($(\"#application\"));\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"200\" src=\"http://jsfiddle.net/BZA8K/66/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>",
            "extends": "BaseView"
        },
        "StateView": {
            "name": "StateView",
            "shortname": "StateView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-views",
            "namespace": "",
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 13,
            "description": "States View. This is usually defined in `{ sections: { pages: { type: 'states'}} }`",
            "extends": "BaseView"
        },
        "Animator": {
            "name": "Animator",
            "shortname": "Animator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/mojo.js/lib/animator.js",
            "line": 8,
            "description": "Animator that makes changes to the UI state of the application. Prevents layout thrashing."
        },
        "Application": {
            "name": "Application",
            "shortname": "Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "namespace": "",
            "file": "packages/mojo.js/lib/application.js",
            "line": 20,
            "description": "Main entry point to your mojo application. The application is an access point to other parts of the application,\nsuch as a third-party `mediator`, `router`, `models`, and `views` (note mojo only comes with the `view` by default). It also keeps your mojo application from polluting the global\nscope.\n### Example\n```javascript\n// load in mojo, browserify will make it accessible from the web. \nvar mojo = require(\"mojo\");\n// create the app\nvar app = new mojo.Application();\n// point to the views to\napp.use(require(\"./views\"));\n// create the main view, then attach to a DOM element. \napp.viewClasses.create(\"main\").attach($(\"#application\"));\n```\nviews.js\n```javascript\nmodule.exports = function (app) {\n  app.viewClasses.add(\"main\", mojo.View.extend({\n      paper: paperclip.compile(\"hello\")\n  }));\n}\n```\nHere's what you get:\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/BZA8K/58/embedded/result,js,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "extends": "BindableObject"
        },
        "Mojo": {
            "name": "Mojo",
            "shortname": "Mojo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "namespace": "",
            "file": "packages/mojo.js/lib/index.js",
            "line": 10
        },
        "RegisteredClasses": {
            "name": "RegisteredClasses",
            "shortname": "RegisteredClasses",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "namespace": "",
            "file": "packages/mojo.js/lib/registeredClasses.js",
            "line": 3,
            "description": "Collection of registered classes that can be used throughout the mojo applicaiton (views/models)."
        },
        "StringNodeFactory": {
            "name": "StringNodeFactory",
            "shortname": "StringNodeFactory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/nofactor.js/lib/string/index.js",
            "line": 15,
            "extends": "BaseNodeFactory"
        },
        "BaseNodeFactory": {
            "name": "BaseNodeFactory",
            "shortname": "BaseNodeFactory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo-core",
            "namespace": "",
            "file": "packages/nofactor.js/lib/base.js",
            "line": 10
        },
        "CustomNodeFactory": {
            "name": "CustomNodeFactory",
            "shortname": "CustomNodeFactory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo",
            "submodule": "mojo-core",
            "namespace": "",
            "file": "packages/nofactor.js/lib/custom.js",
            "line": 9,
            "description": "### Example\n```javascript\nvar nofactor = require(\"nofactor\");\n// use string factory\ncustomNodeFactory = nofactor.custom(nofactor.string);\n// register BR void element\ncustomNodeFactory.registerElement(\"br\", nofactor.string.Element.extend({\n\ttoString: function () {\n\t\treturn \"<\" + this.name + \">\";\n\t}\n}));\n// <br>\nconsole.log(customNodeFactory.createElement(\"br\").toString());\n```",
            "extends": "BaseNodeFactory",
            "is_constructor": 1,
            "params": [
                {
                    "name": "nodeFactory",
                    "description": "the main node factory to call",
                    "type": "BaseNodeFactory"
                }
            ]
        },
        "DomFactory": {
            "name": "DomFactory",
            "shortname": "DomFactory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo-core",
            "namespace": "",
            "file": "packages/nofactor.js/lib/dom.js",
            "line": 8,
            "extends": "BaseNodeFactory"
        },
        "SubindableObject": {
            "name": "SubindableObject",
            "shortname": "SubindableObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mojo-core",
            "namespace": "",
            "file": "packages/subindable.js/lib/index.js",
            "line": 37,
            "description": "Allows you to inherit properties from a parent bindable.",
            "extends": "BindableObject"
        }
    },
    "classitems": [
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 15,
            "description": "Emitted when an item is inserted",
            "itemtype": "event",
            "name": "insert",
            "params": [
                {
                    "name": "item",
                    "description": "inserted",
                    "type": "Object"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 22,
            "description": "Emitted when an item is removed",
            "itemtype": "event",
            "name": "remove",
            "params": [
                {
                    "name": "item",
                    "description": "removed",
                    "type": "Object"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 28,
            "description": "Emitted when items are replaced",
            "itemtype": "event",
            "name": "replace",
            "params": [
                {
                    "name": "newItems",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "oldItems",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 43,
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 48,
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 53,
            "description": "Resets the collection. Same as `source(value)`.",
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 61,
            "description": "Sets / Gets source array",
            "itemtype": "method",
            "name": "source",
            "params": [
                {
                    "name": "source",
                    "description": "source of the collection",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "[Array] source"
            },
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 78,
            "description": "Returns the index of a value",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "object",
                    "description": "to get index of",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "index or -1 (not found)",
                "type": "Number"
            },
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 89,
            "description": "filters the collection",
            "itemtype": "method",
            "name": "filter",
            "return": {
                "description": "array of filtered items",
                "type": "Array"
            },
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 99,
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 106,
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 113,
            "description": "Returns an object at the given index",
            "itemtype": "method",
            "name": "at",
            "return": {
                "description": "Object at specific index",
                "type": "Object"
            },
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 123,
            "description": "forEach item",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "fn",
                    "description": "function to call for each item",
                    "type": "Function"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 133,
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 140,
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 147,
            "description": "Pushes an item onto the collection",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 159,
            "description": "Unshifts an item onto the collection",
            "itemtype": "method",
            "name": "unshift",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 171,
            "description": "Removes N Number of items",
            "itemtype": "method",
            "name": "splice",
            "params": [
                {
                    "name": "index",
                    "description": "start index",
                    "type": "Number"
                },
                {
                    "name": "count",
                    "description": "number of items to remove",
                    "type": "Number"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 186,
            "description": "Removes an item from the collection",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "item",
                    "description": "item to remove",
                    "type": "Object"
                }
            ],
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 201,
            "description": "Removes an item from the end",
            "itemtype": "method",
            "name": "pop",
            "return": {
                "description": "removed item",
                "type": "Object"
            },
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 212,
            "description": "Removes an item from the beginning",
            "itemtype": "method",
            "name": "shift",
            "return": {
                "description": "removed item",
                "type": "Object"
            },
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 237,
            "description": "First item in the collection",
            "itemtype": "property",
            "name": "first",
            "type": "Object",
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 246,
            "description": "length of the collection",
            "itemtype": "property",
            "name": "length",
            "type": "Number",
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 255,
            "description": "True of the collection is empty",
            "itemtype": "property",
            "name": "empty",
            "type": "Boolean",
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/collection/index.js",
            "line": 263,
            "description": "Last item in the collection",
            "itemtype": "property",
            "name": "last",
            "type": "Object",
            "class": "BindableCollection",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/core/eventEmitter.js",
            "line": 20,
            "description": "adds a listener on the event emitter",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "event to listen on",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "to callback when `event` is emitted.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Disposable"
            },
            "class": "EventEmitter",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/core/eventEmitter.js",
            "line": 54,
            "description": "removes an event emitter",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "event",
                    "description": "to remove",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "to remove",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/core/eventEmitter.js",
            "line": 80,
            "description": "adds a listener on the event emitter",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "event to listen on",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "to callback when `event` is emitted.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Disposable"
            },
            "class": "EventEmitter",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/core/eventEmitter.js",
            "line": 101,
            "description": "emits an event",
            "itemtype": "method",
            "name": "emit",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": ",",
                    "description": "`data...` data to emit",
                    "type": "String"
                }
            ],
            "class": "EventEmitter",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/core/eventEmitter.js",
            "line": 147,
            "description": "removes all listeners",
            "itemtype": "method",
            "name": "removeAllListeners",
            "params": [
                {
                    "name": "event",
                    "description": "(optional) removes all listeners of `event`. Omitting will remove everything.",
                    "type": "String"
                }
            ],
            "class": "EventEmitter",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 67,
            "description": "Emitted when the bindable object is disposed. This happens\nwhen the object is no-longer needed.",
            "itemtype": "event",
            "name": "dispose",
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 74,
            "description": "Emitted everytime a property changes",
            "itemtype": "event",
            "name": "change",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 82,
            "description": "Emitted when a specific property changes",
            "itemtype": "event",
            "name": "change:*",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "oldValue",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 91,
            "is_constructor": 1,
            "params": [
                {
                    "name": "context",
                    "description": "context of the bindable object",
                    "type": "Object"
                }
            ],
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 97,
            "description": "emitted when a property is being watched",
            "itemtype": "event",
            "name": "watching",
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 118,
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 123,
            "description": "The context of the bindable object. Note that the context can be `this`.",
            "itemtype": "method",
            "name": "context",
            "params": [
                {
                    "name": "data",
                    "description": "(optional) sets the context",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "context",
                "type": "Object"
            },
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 141,
            "description": "Returns the keys in the context",
            "itemtype": "method",
            "name": "keys",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 151,
            "description": "Returns TRUE if a property exists in the context",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 162,
            "description": "Returns a property stored in the bindable object context",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "path",
                    "description": "path to the value. Can be something like `person.city.name`.",
                    "type": "String"
                }
            ],
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 199,
            "description": "Properties to set on the bindable object",
            "itemtype": "method",
            "name": "setProperties",
            "params": [
                {
                    "name": "properties",
                    "description": "properties to set",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "this",
                "type": "BindableObject"
            },
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 213,
            "description": "Sets a property on the bindable object's context",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "path",
                    "description": "path to the value. Can be something like `person.city.name`.",
                    "type": "String"
                }
            ],
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 282,
            "description": "Binds a property to a function",
            "itemtype": "method",
            "name": "bind",
            "params": [
                {
                    "name": "property",
                    "description": "path to bind to.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "`function` or `transformer` to bind to",
                    "type": "Object"
                },
                {
                    "name": "now",
                    "description": "(optional) call binding now. Otherwise wait till property changes.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Binding"
            },
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 295,
            "description": "Disposes the bindable object. Emits `dispose`.",
            "itemtype": "method",
            "name": "dispose",
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/index.js",
            "line": 304,
            "description": "Converts the context to a JSON object",
            "itemtype": "method",
            "name": "toJSON",
            "class": "BindableObject",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/watchProperty.js",
            "line": 28,
            "description": "the target bindable object",
            "itemtype": "property",
            "name": "target",
            "type": "{BindableObject}",
            "class": "Binding",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/watchProperty.js",
            "line": 36,
            "description": "triggers the binding listener",
            "itemtype": "method",
            "name": "now",
            "class": "Binding",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/watchProperty.js",
            "line": 46,
            "description": "disposes the binding",
            "itemtype": "method",
            "name": "dispose",
            "class": "Binding",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/watchProperty.js",
            "line": 200,
            "class": "Binding",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/bindable.js/lib/object/watchProperty.js",
            "line": 238,
            "class": "Binding",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 66,
            "description": "the node factory which creates elements, text nodes, comments, and document fragments",
            "itemtype": "property",
            "name": "nodeFactory",
            "type": "{BaseNodeFactory}",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 74,
            "description": "start marker for the section",
            "itemtype": "property",
            "name": "start",
            "type": "{Node}",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 82,
            "description": "end marker for the section",
            "itemtype": "property",
            "name": "end",
            "type": "{Node}",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 90,
            "description": "visibile property which is toggled on hide / show",
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 108,
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 113,
            "description": "Renders the section, and returns the start parent node",
            "itemtype": "method",
            "name": "render",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 122,
            "description": "Removes the entire section from the DOM, including the start & end markers",
            "itemtype": "method",
            "name": "remove",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 132,
            "description": "shows the section if it's hidden",
            "itemtype": "method",
            "name": "show",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 146,
            "description": "hides the fragment, but maintains the start / end elements\nso it can be shown again in the same spot",
            "itemtype": "method",
            "name": "hide",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 159,
            "description": "Removes all section elements inside the start & end elements",
            "itemtype": "method",
            "name": "removeAll",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 168,
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 187,
            "description": "appends elements at the end of the section",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "elements...",
                    "description": "elements to append",
                    "type": "Node"
                }
            ],
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 197,
            "description": "appends elements at the beginning of the section",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "elements...",
                    "description": "elements to prepend",
                    "type": "Node"
                }
            ],
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 207,
            "description": "replaces all child nodes within the start & end elements",
            "itemtype": "method",
            "name": "replaceChildNodes",
            "params": [
                {
                    "name": "elements...",
                    "description": "elements to replace",
                    "type": "Node"
                }
            ],
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 220,
            "description": "Stringifies sections",
            "itemtype": "method",
            "name": "toString",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 232,
            "description": "disposes the section, including start & end elements",
            "itemtype": "method",
            "name": "dispose",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 247,
            "description": "returns all elements in the section, including start & end elements",
            "itemtype": "method",
            "name": "getChildNodes",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 266,
            "description": "returns all inner elements in the section, not including start & end elements",
            "itemtype": "method",
            "name": "getInnerChildNodes",
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 278,
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/loaf.js/lib/index.js",
            "line": 293,
            "class": "Section",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/events.js",
            "line": 21,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/events.js",
            "line": 34,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/events.js",
            "line": 41,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/events.js",
            "line": 84,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/events.js",
            "line": 93,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/factory.js",
            "line": 11,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/factory.js",
            "line": 19,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/factory.js",
            "line": 29,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/factory.js",
            "line": 48,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/sections.js",
            "line": 16,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/sections.js",
            "line": 26,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/sections.js",
            "line": 42,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/plugins/decor/sections.js",
            "line": 58,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/pools/index.js",
            "line": 46,
            "class": "BaseView",
            "module": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 205,
            "description": "Called when the view is rendered",
            "itemtype": "event",
            "name": "render",
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 210,
            "description": "Called when the view is remove",
            "itemtype": "event",
            "name": "remove",
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 221,
            "description": "The main application that instantiated this view",
            "itemtype": "property",
            "name": "application",
            "type": "{Application}",
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 237,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 242,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 247,
            "description": "adds a disposable object to cleanup when the view is destroyed.",
            "itemtype": "method",
            "name": "disposable",
            "params": [
                {
                    "name": "disposable",
                    "description": "Must have `dispose()` defined.",
                    "type": "Object"
                }
            ],
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 262,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 280,
            "description": "Called when the view is instantiated",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "options",
                    "description": "options passed when creating the view",
                    "type": "Object"
                }
            ],
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 296,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 309,
            "description": "The section that manages the `document fragment` owned by this view controller.",
            "itemtype": "property",
            "name": "section",
            "type": "{Section}",
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 322,
            "description": "Returns the path to the view",
            "itemtype": "method",
            "name": "path",
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 338,
            "description": "Renders the view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "document fragment",
                "type": "Object"
            },
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 363,
            "description": "called in `render()`, before emitting `render` event",
            "itemtype": "method",
            "name": "_render",
            "access": "protected",
            "tagname": "",
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 373,
            "description": "Removes the view from the parent, or DOM",
            "itemtype": "method",
            "name": "remove",
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 388,
            "description": "jquery selector for elements owned by the view",
            "itemtype": "method",
            "name": "$",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 406,
            "description": "Attaches the view to an element. This is mostly used for the main view.",
            "itemtype": "method",
            "name": "attach",
            "params": [
                {
                    "name": "DOM",
                    "description": "element to attach to",
                    "type": "Object"
                }
            ],
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 426,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 434,
            "description": "Sort of a mix-in for the view. This is how `sections`, and `events` are added.",
            "itemtype": "method",
            "name": "decorate",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "this",
                "type": "Object"
            },
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 463,
            "description": "Bubbles an event up to the root view",
            "itemtype": "method",
            "name": "bubble",
            "params": [
                {
                    "name": "name",
                    "description": "of the event",
                    "type": "String"
                },
                {
                    "name": "params...",
                    "description": "additional params",
                    "type": "Object"
                }
            ],
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 475,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 497,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 507,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/base/index.js",
            "line": 518,
            "class": "BaseView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 75,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 95,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 100,
            "description": "Number of items to asyncronously add to the list (optimization).",
            "itemtype": "property",
            "name": "chunk",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 107,
            "description": "Delay between adding chunked items to the list (optimization).",
            "itemtype": "property",
            "name": "delay",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 114,
            "description": "make sure decorations don't get activated for this view",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 120,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 125,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 130,
            "description": "The filter method for the list view",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "the",
                    "description": "model to builder",
                    "type": "BindableObject"
                }
            ],
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 138,
            "description": "The sort method for the list",
            "itemtype": "method",
            "name": "sort",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "BaseView"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "BaseView"
                }
            ],
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 147,
            "description": "Maps model data before setting to the instantiated list item view",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "0, 1, or -1",
                "type": "Number"
            },
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 156,
            "description": "The size of the list view",
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 164,
            "description": "The model view factory for creating each list item",
            "itemtype": "property",
            "name": "modelViewFactory",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 171,
            "description": "The model view class for each list item. Use this or `modelViewFactory`.",
            "itemtype": "property",
            "name": "modelViewClass",
            "type": "{BaseView}",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 179,
            "description": "DEPRECATED",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 185,
            "description": "The collection of models to use. Each model is assigned as `model` to each instantiated `modelViewClass`.",
            "itemtype": "property",
            "name": "source",
            "type": "{BindableCollection}",
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 194,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 223,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 247,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 287,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 294,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 307,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 315,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 354,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 364,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 372,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 379,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 418,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 432,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 473,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 484,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 498,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 527,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 535,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 549,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/list/index.js",
            "line": 560,
            "class": "ListView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 26,
            "description": "prevent states from being decorated",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 32,
            "description": "Transitions from one state to another",
            "params": [
                {
                    "name": "from",
                    "description": "view to transition from. This can be null.",
                    "type": "BaseView"
                },
                {
                    "name": "to",
                    "description": "view to transition to.",
                    "type": "BaseView"
                },
                {
                    "name": "complete",
                    "description": "called when the transition finishes",
                    "type": "Function"
                }
            ],
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 43,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 48,
            "description": "current state name",
            "itemtype": "property",
            "name": "currentName",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 55,
            "description": "current state index",
            "itemtype": "property",
            "name": "index",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 62,
            "description": "TODO - change this to 'states'",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 68,
            "description": "The current view being displayed",
            "itemtype": "property",
            "name": "currentView",
            "type": "{BaseView}",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 79,
            "description": "The collection of view classes to use",
            "itemtype": "property",
            "name": "views",
            "type": "{Array}",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 88,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 93,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 107,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 121,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 130,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 144,
            "description": "Selects a specific index",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "stateOrIndex",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 161,
            "description": "moves to the next state",
            "itemtype": "method",
            "name": "next",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 170,
            "description": "moves to the previous state",
            "itemtype": "method",
            "name": "prev",
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 179,
            "description": "moves to a specific state index",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "position",
                    "description": "steps to move. Can be something like `-1`, or `1`."
                }
            ],
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 207,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 221,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/index.js",
            "line": 228,
            "class": "StateView",
            "module": "mojo",
            "submodule": "mojo-views"
        },
        {
            "file": "packages/mojo.js/lib/views/states/state.js",
            "line": 28,
            "class": "Animator",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/views/states/state.js",
            "line": 35,
            "class": "Animator",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/views/states/state.js",
            "line": 45,
            "class": "Animator",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/views/states/state.js",
            "line": 56,
            "class": "Animator",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/views/states/state.js",
            "line": 64,
            "class": "Animator",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/views/states/state.js",
            "line": 71,
            "class": "Animator",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/animator.js",
            "line": 21,
            "description": "Runs animatable object on requestAnimationFrame. This gets\ncalled whenever the UI state changes.",
            "itemtype": "method",
            "name": "animate",
            "params": [
                {
                    "name": "animatable",
                    "description": "object. Must have `update()`",
                    "type": "Object"
                }
            ],
            "class": "Animator",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 70,
            "description": "The node factory to use. Changes depending on the platform.",
            "itemtype": "property",
            "name": "nodeFactory",
            "type": "BaseNodeFactory",
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 78,
            "description": "Where all the instantiated models live.",
            "itemtype": "property",
            "name": "models",
            "type": "BindableObject",
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 86,
            "description": "TRUE if testing mode",
            "itemtype": "property",
            "name": "fake",
            "type": "{Boolean}",
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 94,
            "description": "List of registered model classes",
            "itemtype": "property",
            "name": "modelClasses",
            "type": "RegisteredClasses",
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 102,
            "description": "List of registered view classes",
            "itemtype": "property",
            "name": "viewClasses",
            "type": "RegisteredClasses",
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 120,
            "description": "Plugins to use for the mojo application.",
            "itemtype": "method",
            "name": "use",
            "params": [
                {
                    "name": "plugins...",
                    "description": "must be defined as `function (app) { }`",
                    "type": "Function"
                }
            ],
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 137,
            "description": "DEPRECATED",
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 153,
            "description": "DEPRECATED",
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/application.js",
            "line": 167,
            "description": "Runs `update()` on requestAnimationFrame. Used whenever the UI changes.",
            "itemtype": "method",
            "name": "animate",
            "params": [
                {
                    "name": "animatable",
                    "description": "Must have `update()` defined.",
                    "type": "Object"
                }
            ],
            "see": [
                "Animator"
            ],
            "class": "Application",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/index.js",
            "line": 18,
            "description": "The base mojo.js View",
            "itemtype": "property",
            "name": "View",
            "class": "Mojo",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/index.js",
            "line": 25,
            "description": "The base mojo.application. This is where all your models / views live.",
            "itemtype": "property",
            "name": "Application",
            "class": "Mojo",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/index.js",
            "line": 32,
            "description": "Registers a class to pool",
            "itemtype": "property",
            "name": "pool",
            "class": "Mojo",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/registeredClasses.js",
            "line": 17,
            "description": "Returns a registered class",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RegisteredClasses",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/registeredClasses.js",
            "line": 27,
            "description": "Registers a class",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "clazz",
                    "description": "the view / model class",
                    "type": "Class"
                }
            ],
            "class": "RegisteredClasses",
            "module": "mojo"
        },
        {
            "file": "packages/mojo.js/lib/registeredClasses.js",
            "line": 38,
            "description": "Creates a new object. \nNote that `application` is passed in the second constructor param of the instantiated class.",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "to pass as the first param in the constructor",
                    "type": "Object"
                }
            ],
            "class": "RegisteredClasses",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/comment.js",
            "line": 9,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/comment.js",
            "line": 14,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/comment.js",
            "line": 21,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/container.js",
            "line": 9,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/container.js",
            "line": 26,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/container.js",
            "line": 37,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/container.js",
            "line": 55,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/container.js",
            "line": 71,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/container.js",
            "line": 86,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/container.js",
            "line": 95,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/element.js",
            "line": 16,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/element.js",
            "line": 21,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/element.js",
            "line": 48,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/element.js",
            "line": 64,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/element.js",
            "line": 72,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/element.js",
            "line": 105,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/fragment.js",
            "line": 9,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/fragment.js",
            "line": 14,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/fragment.js",
            "line": 21,
            "class": "StringNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/index.js",
            "line": 27,
            "class": "StringNodeFactory",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/string/index.js",
            "line": 32,
            "class": "StringNodeFactory",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/string/index.js",
            "line": 39,
            "class": "StringNodeFactory",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/string/index.js",
            "line": 46,
            "class": "StringNodeFactory",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/string/index.js",
            "line": 53,
            "class": "StringNodeFactory",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/string/index.js",
            "line": 69,
            "class": "StringNodeFactory",
            "module": "mojo",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/string/style.js",
            "line": 9,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/style.js",
            "line": 14,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/style.js",
            "line": 28,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/style.js",
            "line": 46,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/style.js",
            "line": 59,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/style.js",
            "line": 74,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/style.js",
            "line": 98,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/text.js",
            "line": 12,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/text.js",
            "line": 17,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/text.js",
            "line": 24,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/string/text.js",
            "line": 31,
            "class": "BaseNodeFactory",
            "module": "mojo"
        },
        {
            "file": "packages/nofactor.js/lib/base.js",
            "line": 23,
            "description": "creates a new element",
            "itemtype": "method",
            "name": "createElement",
            "params": [
                {
                    "name": "name",
                    "description": "name of the element",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ElementNode"
            },
            "class": "BaseNodeFactory",
            "module": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/base.js",
            "line": 32,
            "description": "creates a new fragment",
            "itemtype": "method",
            "name": "createFragment",
            "return": {
                "description": "",
                "type": "FragmentNode"
            },
            "class": "BaseNodeFactory",
            "module": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/base.js",
            "line": 40,
            "description": "creates a new comment",
            "itemtype": "method",
            "name": "createComment",
            "return": {
                "description": "",
                "type": "CommentNode"
            },
            "class": "BaseNodeFactory",
            "module": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/base.js",
            "line": 48,
            "description": "creates a new text node",
            "itemtype": "method",
            "name": "createTextNode",
            "return": {
                "description": "",
                "type": "TextNode"
            },
            "class": "BaseNodeFactory",
            "module": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/custom.js",
            "line": 52,
            "description": "Registers a new element class",
            "itemtype": "method",
            "name": "registerElement",
            "params": [
                {
                    "name": "name",
                    "description": "name of the element",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "element class",
                    "type": "Class"
                }
            ],
            "class": "CustomNodeFactory",
            "module": "",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/nofactor.js/lib/custom.js",
            "line": 95,
            "class": "CustomNodeFactory",
            "module": "",
            "submodule": "mojo-core"
        },
        {
            "file": "packages/subindable.js/lib/index.js",
            "line": 70,
            "description": "The parent subindable object",
            "itemtype": "property",
            "name": "parent",
            "type": "SubindableObject",
            "class": "SubindableObject",
            "module": "mojo-core"
        },
        {
            "file": "packages/subindable.js/lib/index.js",
            "line": 145,
            "description": "Inherits a property from the parent subindable object",
            "itemtype": "method",
            "name": "inherit",
            "params": [
                {
                    "name": "path",
                    "description": "path to inherit.",
                    "type": "String"
                }
            ],
            "class": "SubindableObject",
            "module": "mojo-core"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/collection/index.js:61"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/collection/index.js:78"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/collection/index.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/collection/index.js:113"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/collection/index.js:201"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/collection/index.js:212"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/core/eventEmitter.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/core/eventEmitter.js:80"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/object/index.js:123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/object/index.js:141"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/object/index.js:151"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/object/index.js:199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/bindable.js/lib/object/index.js:282"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/mojo.js/lib/views/base/index.js:434"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/nofactor.js/lib/base.js:23"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/nofactor.js/lib/base.js:32"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/nofactor.js/lib/base.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " packages/nofactor.js/lib/base.js:48"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/collection/index.js:43"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/collection/index.js:48"
        },
        {
            "message": "Missing item type\nResets the collection. Same as `source(value)`.",
            "line": " packages/bindable.js/lib/collection/index.js:53"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/collection/index.js:99"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/collection/index.js:106"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/collection/index.js:133"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/collection/index.js:140"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/object/index.js:91"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/object/index.js:118"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/object/watchProperty.js:200"
        },
        {
            "message": "Missing item type",
            "line": " packages/bindable.js/lib/object/watchProperty.js:238"
        },
        {
            "message": "Missing item type",
            "line": " packages/loaf.js/lib/index.js:108"
        },
        {
            "message": "Missing item type",
            "line": " packages/loaf.js/lib/index.js:168"
        },
        {
            "message": "Missing item type",
            "line": " packages/loaf.js/lib/index.js:278"
        },
        {
            "message": "Missing item type",
            "line": " packages/loaf.js/lib/index.js:293"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/events.js:21"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/events.js:34"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/events.js:41"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/events.js:84"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/events.js:93"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/factory.js:11"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/factory.js:19"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/factory.js:29"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/factory.js:48"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/sections.js:16"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/sections.js:26"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/sections.js:42"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/plugins/decor/sections.js:58"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/pools/index.js:46"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:237"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:242"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:262"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:296"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:426"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:475"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:497"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:507"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/base/index.js:518"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:75"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:95"
        },
        {
            "message": "Missing item type\nmake sure decorations don't get activated for this view",
            "line": " packages/mojo.js/lib/views/list/index.js:114"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:120"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:125"
        },
        {
            "message": "Missing item type\nDEPRECATED",
            "line": " packages/mojo.js/lib/views/list/index.js:179"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:194"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:223"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:247"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:287"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:294"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:307"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:315"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:354"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:364"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:372"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:379"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:418"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:432"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:473"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:484"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:498"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:527"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:535"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:549"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/list/index.js:560"
        },
        {
            "message": "Missing item type\nprevent states from being decorated",
            "line": " packages/mojo.js/lib/views/states/index.js:26"
        },
        {
            "message": "Missing item type\nTransitions from one state to another",
            "line": " packages/mojo.js/lib/views/states/index.js:32"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:43"
        },
        {
            "message": "Missing item type\nTODO - change this to 'states'",
            "line": " packages/mojo.js/lib/views/states/index.js:62"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:88"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:93"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:107"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:121"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:130"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:207"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:221"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/index.js:228"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/state.js:28"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/state.js:35"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/state.js:45"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/state.js:56"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/state.js:64"
        },
        {
            "message": "Missing item type",
            "line": " packages/mojo.js/lib/views/states/state.js:71"
        },
        {
            "message": "Missing item type\nDEPRECATED",
            "line": " packages/mojo.js/lib/application.js:137"
        },
        {
            "message": "Missing item type\nDEPRECATED",
            "line": " packages/mojo.js/lib/application.js:153"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/comment.js:9"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/comment.js:14"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/comment.js:21"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/container.js:9"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/container.js:26"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/container.js:37"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/container.js:55"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/container.js:71"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/container.js:86"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/container.js:95"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/element.js:16"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/element.js:21"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/element.js:48"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/element.js:64"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/element.js:72"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/element.js:105"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/fragment.js:9"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/fragment.js:14"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/fragment.js:21"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/index.js:27"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/index.js:32"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/index.js:39"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/index.js:46"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/index.js:53"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/index.js:69"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/style.js:9"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/style.js:14"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/style.js:28"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/style.js:46"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/style.js:59"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/style.js:74"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/style.js:98"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/text.js:12"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/text.js:17"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/text.js:24"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/string/text.js:31"
        },
        {
            "message": "Missing item type",
            "line": " packages/nofactor.js/lib/custom.js:95"
        }
    ]
}